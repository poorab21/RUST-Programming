enum Currency {
    USD ,
    EUR ,
    GBP ,
    JPY
}

impl Currency {
    fn Usd() -> Self {
        Self::USD
    }
    
    fn Eur() -> Self {
        Self::EUR
    }
    
    fn Gbp() -> Self {
        Self::GBP
    }
    
    fn Jpy() -> Self {
        Self::JPY
    }
}

fn convert( source_currency : Currency , destination_currency : Currency , amount : f64 ) -> f64 {
    match ( source_currency , destination_currency ) {
        ( Currency::USD , Currency::EUR ) => 0.94 * amount ,
        ( Currency::USD , Currency::GBP ) => 0.82 * amount ,
        ( Currency::USD , Currency::JPY ) => 149.07 * amount ,
        ( Currency::EUR , Currency::USD ) => 1.06 * amount ,
        ( Currency::EUR , Currency::GBP ) => 0.86 * amount ,
        ( Currency::EUR , Currency::JPY ) => 157.90 * amount,
        ( Currency::GBP , Currency::USD ) => 1.22 * amount,
        ( Currency::GBP , Currency::EUR ) => 1.16 * amount,
        ( Currency::GBP , Currency::JPY ) => 182.64 * amount,
        ( Currency::JPY , Currency::USD ) => 0.0067 * amount,
        ( Currency::JPY , Currency::GBP ) => 0.0055 * amount,
        ( Currency::JPY , Currency::EUR ) => 0.0063 * amount,
        _ => { 0.0 }
    }
}

fn main() {
    println!("{}", convert(Currency::Usd() , Currency::Eur() , 145.0) );
}