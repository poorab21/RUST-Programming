use std::sync::mpsc;
use std::thread;

fn main() {
    let ( tx , rx ) = mpsc::channel::<(i32,i32)>();
    let arr = [ 16 , 5 , 19 , 7 , 2 , 16 ];
    let mut sum = 0;
    
    let tx1 = tx.clone();
    let tx2 = tx.clone();
    
    thread::spawn(
        move || {
            let portion = &arr[0..2];
                tx1.send(
                (
                    1 ,
                    portion.iter().sum() 
                )
            );
        }
    );
    
    thread::spawn(
        move || {
            let portion = &arr[2..4];
            tx2.send(
                (
                    2 ,
                    portion.iter().sum()
                )
            );
        }
    );
    
    thread::spawn(
        move || {
            let portion = &arr[4..6];
            tx.send( 
                (
                    3 ,
                    portion.iter().sum()
                )
            );
        }
    );
    
    for result in rx {
        println!("Sum from thread {} = {}",result.0,result.1);
        sum += result.1;
    }
    println!("Overall Sum = {sum}");
}