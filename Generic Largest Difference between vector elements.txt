use std::default::Default;

fn largest_difference<T: num::Num + std::cmp::PartialOrd + Default + Clone>( vec : &Vec<T> ) -> T {
    let mut largest_difference : T = Default::default();
    
    for i in 0..vec.len() {
        for j in 0..vec.len() {
            if vec[i] > vec[j] && (vec[i].clone() - vec[j].clone()) > largest_difference {
                largest_difference = vec[i].clone() - vec[j].clone();
            }
        }
    }
    largest_difference
}

fn main() {
    println!("{}",largest_difference(&vec![8u32]));
}